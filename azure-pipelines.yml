trigger:
- master

stages:
  - stage: python
    displayName: Python Setup
    jobs:
      - job: python
        displayName: Download, Setup Environment, Install Dependencies
        pool: 'new agent vm self hosted'
        steps:
          - script: 
              echo "Installing system dependencies..."
              sudo apt-get update
              sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev \
              libnss3-dev libssl-dev libreadline-dev libffi-dev curl

              echo "Downloading Python 3.7.9 source..."
              curl -O https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz
              tar -xvf Python-3.7.9.tgz
              cd Python-3.7.9
              echo "Configuring and building Python..."
              ./configure --enable-optimizations
              make -j$(nproc)
              sudo make altinstall
              echo "Installed Python version:"
              python3.7 --version
            displayName: 'Install Python 3.7.9 on ARM64'

          - task: AzureCLI@2
            inputs:
              azureSubscription: "bot-connection"
              scriptType: 'bash'
              scriptLocation: inlineScript
              inlineScript: |
                git clone -b master https://github.com/Thiru799/ansible8.git temp_project
                mkdir -p $(Pipeline.Workspace)/Projects/demo
                cp -r temp_project/* $(Pipeline.Workspace)/Projects/demo/
                ls $(Pipeline.Workspace)/Projects/demo/

          - script: |
              # export PATH="/usr/local/bin:$PATH"
              python -m venv enve
              source enve/Scripts/activate
              pip install --upgrade pip setuptools wheel
              
              if not exist requirements.txt (
                  echo pytest > requirements.txt
                  echo requests >> requirements.txt
                  echo flask >> requirements.txt
              )

              pip install -r requirements.txt
            displayName: 'Create Venv and Install Python Dependencies'

          - script: |
              echo Python dependencies installed successfully!
            displayName: 'Success Message'
            condition: succeeded()
