trigger:
- master

stages:
- stage: Setup
  displayName: Python Setup
  jobs:
  - job: InstallPython
    displayName: Install Python and Setup Environment
    pool:
      name: 'new agent vm self hosted'

    steps:
    - script: |
        echo "Installing system dependencies..."
        sudo apt-get update
        sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev \
          libnss3-dev libssl-dev libreadline-dev libffi-dev curl wget

        echo "Installing Python 3.7.9 in /opt/python3.7.9..."
        cd /tmp
        wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz
        tar -xvf Python-3.7.9.tgz
        cd Python-3.7.9
        ./configure --prefix=/opt/python3.7.9 --enable-optimizations
        make -j$(nproc)
        sudo make altinstall

        echo "Linking python3.7 and pip3.7..."
        sudo ln -sf /opt/python3.7.9/bin/python3.7 /usr/local/bin/python3.7
        sudo ln -sf /opt/python3.7.9/bin/pip3.7 /usr/local/bin/pip3.7
      displayName: 'Install Python 3.7.9 (Safe Path)'

    - script: |
        echo "Verifying Python install..."
        which python3.7
        python3.7 --version
      displayName: 'Check Python Version'

    - script: |
        echo "Cloning project..."
        git clone -b master https://github.com/Thiru799/ansible8.git project
        ls project
      displayName: 'Clone Project Repository'

    - script: |
        echo "Creating virtualenv with Python 3.7..."
        python3.7 -m venv venv
        source venv/bin/activate

        echo "Upgrading pip and installing dependencies..."
        pip install --upgrade pip setuptools wheel

        if [ ! -f project/requirements.txt ]; then
          echo "pytest" > project/requirements.txt
          echo "requests" >> project/requirements.txt
          echo "flask" >> project/requirements.txt
        fi

        pip install -r project/requirements.txt
      displayName: 'Create venv and Install Dependencies'

    - script: |
        echo "All done. Python environment ready."
      displayName: 'Success Message'
      condition: succeeded()
