trigger:
- master

stages:
  - stage: python
    displayName: Python Setup
    jobs:
      - job: python
        displayName: Install Python and Setup Environment
        pool:
          name: 'new agent vm self hosted'  # Your self-hosted agent pool name here
        steps:
          # Fix permissions first
          - script: |
              echo "Fixing permissions in agent workspace..."
              sudo chown -R $(USER) $(Pipeline.Workspace)
            displayName: 'Fix Agent Workspace Permissions'

          # Now install dependencies and Python outside workspace
          - script: |
              echo "Installing system dependencies..."
              sudo apt-get update
              sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev \
              libnss3-dev libssl-dev libreadline-dev libffi-dev curl wget
              
              echo "Downloading and installing Python 3.7.9 in /tmp..."
              cd /tmp
              wget https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz
              tar -xvf Python-3.7.9.tgz
              cd Python-3.7.9
              ./configure --enable-optimizations
              make -j$(nproc)
              sudo make altinstall
              
              echo "Installed Python version:"
              /usr/local/bin/python3.7 --version
            displayName: 'Install Python 3.7.9 outside workspace'

          # Clone repo, setup environment
          - script: |
              echo "Cloning repo and setting up environment..."
              git clone -b master https://github.com/Thiru799/ansible8.git repo_temp
              mkdir -p $(Pipeline.Workspace)/Projects/demo
              cp -r repo_temp/* $(Pipeline.Workspace)/Projects/demo/
              ls $(Pipeline.Workspace)/Projects/demo/

              echo "Creating virtual environment..."
              /usr/local/bin/python3.7 -m venv enve
              source enve/bin/activate

              echo "Upgrading pip and installing dependencies..."
              pip install --upgrade pip setuptools wheel

              if [ ! -f requirements.txt ]; then
                  echo "pytest" > requirements.txt
                  echo "requests" >> requirements.txt
                  echo "flask" >> requirements.txt
              fi

              pip install -r requirements.txt
            displayName: 'Clone Repo & Setup Python Environment'

          - script: echo "Pipeline succeeded!"
            displayName: 'Final Success Message'
            condition: succeeded()
